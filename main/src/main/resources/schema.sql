drop table IF EXISTS users CASCADE;
drop table IF EXISTS categories CASCADE;
drop table IF EXISTS locations CASCADE;
drop table IF EXISTS events CASCADE;
drop table IF EXISTS requests CASCADE;
drop table IF EXISTS compilations CASCADE;
drop table IF EXISTS compilations_events CASCADE;
drop table IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users(
    id  INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL UNIQUE,
    email  VARCHAR(254),
    name   VARCHAR(250) UNIQUE
    );

CREATE TABLE IF NOT EXISTS categories (
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL UNIQUE,
    name   VARCHAR(50) UNIQUE
    );

CREATE TABLE IF NOT EXISTS locations(
     id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL UNIQUE,
     lat FLOAT,
     lon FLOAT
    );

CREATE TABLE IF NOT EXISTS events(
    id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL UNIQUE,
    annotation VARCHAR(2000),
    category_id INT,
    confirmed_requests INT,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR(7000),
    event_date TIMESTAMP WITHOUT TIME ZONE,
    initiator_id INT,
    location_id INT,
    paid VARCHAR(5),
    participant_limit INT,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation VARCHAR(5),
    state VARCHAR(10),
    title VARCHAR(120),
    CONSTRAINT fk_categories FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    CONSTRAINT fk_users FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT fk_locations FOREIGN KEY (location_id) REFERENCES locations (id)
    );

CREATE TABLE IF NOT EXISTS requests(
     id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL UNIQUE,
     event_id INT,
     requester_id INT,
     status VARCHAR(9),
     created TIMESTAMP WITHOUT TIME ZONE,
     CONSTRAINT fk_events FOREIGN KEY (event_id) REFERENCES events (id),
     CONSTRAINT fk_users FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title  VARCHAR(512),
    pinned BOOLEAN default false
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id INT not null,
    event_id       INT not null,
    CONSTRAINT pk_compilation_events PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation_event FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE,
    CONSTRAINT fk_event_comp FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
    id            INT generated by default as identity not null PRIMARY KEY,
    text          varchar(1500) NOT NULL,
    user_id       INT NOT null references users(id) ON DELETE CASCADE,
    event_id      INT NOT null references events(id) ON DELETE CASCADE,
    created       TIMESTAMP WITHOUT TIME ZONE,
    comment_state varchar(9)
);

